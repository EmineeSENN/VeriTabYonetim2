CREATE TABLE COUNTRIES (
    ID INT PRIMARY KEY,
    COUNTRY VARCHAR(50)
);


CREATE TABLE CITIES (
    ID INT PRIMARY KEY,
    COUNTRYID INT NOT NULL,
    CITY VARCHAR(50),
    FOREIGN KEY (COUNTRYID) REFERENCES COUNTRIES(ID)
);


CREATE TABLE TOWNS (
    ID INT PRIMARY KEY,
    CITYID INT NOT NULL,
    TOWN VARCHAR(50),
    FOREIGN KEY (CITYID) REFERENCES CITIES(ID)
);

CREATE TABLE DISTRICTS (
    ID INT PRIMARY KEY,
    TOWNID INT NOT NULL,
    DISTRICT VARCHAR(50),
    FOREIGN KEY (TOWNID) REFERENCES TOWNS(ID)
);


CREATE TABLE USERS (
    ID INT PRIMARY KEY,
    USERNAME_ VARCHAR(50),
    PASSWORD_ VARCHAR(50),
    NAMESURNAME VARCHAR(50),
    EMAIL VARCHAR(50),
    GENDER CHAR(1),
    BIRTHDATE DATE,
    CREATEDATE DATETIME,
    TELNR1 VARCHAR(50),
    TELNR2 VARCHAR(50)
);


CREATE TABLE ADDRESS (
    ID INT PRIMARY KEY,
    USERID INT NOT NULL,
    COUNTRYID INT NOT NULL,
    CITYID INT NOT NULL,
    TOWNID INT NOT NULL,
    DISTRICTID INT NOT NULL,
    POSTALCODE VARCHAR(50),
    ADDRESSTXT VARCHAR(50),
    FOREIGN KEY (USERID) REFERENCES USERS(ID),
    FOREIGN KEY (COUNTRYID) REFERENCES COUNTRIES(ID),
    FOREIGN KEY (CITYID) REFERENCES CITIES(ID),
    FOREIGN KEY (TOWNID) REFERENCES TOWNS(ID),
    FOREIGN KEY (DISTRICTID) REFERENCES DISTRICTS(ID)
);


CREATE TABLE ORDERS (
    ID INT PRIMARY KEY,
    USERID INT NOT NULL,
    DATE_ DATE NOT NULL,
    TOTALPRICE FLOAT,
    STATUS_ VARCHAR(50),
    ADDRESSID INT,
    FOREIGN KEY (USERID) REFERENCES USERS(ID),
    FOREIGN KEY (ADDRESSID) REFERENCES ADDRESS(ID)
);


CREATE TABLE ITEMS (
    ID INT PRIMARY KEY,
    ITEMCODE VARCHAR(50) UNIQUE,
    ITEMNAME VARCHAR(50),
    UNITPRICE FLOAT,
    CATEGORY1 VARCHAR(50),
    CATEGORY2 VARCHAR(50),
    CATEGORY3 VARCHAR(50),
    CATEGORY4 VARCHAR(50),
    BRAND VARCHAR(50)
);


CREATE TABLE ORDERDETAILS (
    ID INT PRIMARY KEY,
    ORDERID INT NOT NULL,
    ITEMID INT NOT NULL,
    AMOUNT INT NOT NULL,
    UNITPRICE FLOAT,
    LINETOTAL FLOAT,
    FOREIGN KEY (ORDERID) REFERENCES ORDERS(ID),
    FOREIGN KEY (ITEMID) REFERENCES ITEMS(ID)
);


CREATE TABLE INVOICES (
    ID INT PRIMARY KEY,
    ORDERID INT NOT NULL,
    DATE DATE NOT NULL,
    ADDRESSID INT,
    CARGOFICHENO VARCHAR(50),
    TOTALPRICE FLOAT,
    FOREIGN KEY (ORDERID) REFERENCES ORDERS(ID),
    FOREIGN KEY (ADDRESSID) REFERENCES ADDRESS(ID)
);


CREATE TABLE INVOICEDETAILS (
    ID INT PRIMARY KEY,
    INVOICEID INT NOT NULL,
    ORDERDETAILID INT NOT NULL,
    ITEMID INT NOT NULL,
    AMOUNT INT,
    UNITPRICE FLOAT,
    LINETOTAL FLOAT,
    FOREIGN KEY (INVOICEID) REFERENCES INVOICES(ID),
    FOREIGN KEY (ORDERDETAILID) REFERENCES ORDERDETAILS(ID),
    FOREIGN KEY (ITEMID) REFERENCES ITEMS(ID)
);


CREATE TABLE PAYMENTS (
    ID INT PRIMARY KEY,
    ORDERID INT NOT NULL,
    PAYMENTTYPE VARCHAR(50),
    DATE_ DATE,
    ISOK BIT,
    APPROVECODE VARCHAR(50),
    PAYMENTTOTAL FLOAT,
    FOREIGN KEY (ORDERID) REFERENCES ORDERS(ID)
);
